datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Events Events[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Events {
  id                String     @id @default(uuid()) // ID único
  nome              String     // Nome do evento
  banner            String     // URL do banner principal
  carrossel         String[]   // URLs das imagens do carrossel
  descricao         String     // Descrição do evento
  data              DateTime   // Data do evento
  linkParaCompra    String     // Link para compra de ingresso
  endereco          String     // Endereço do evento
  title             String     // Título do evento
  userId            String?    // ID do usuário que criou o evento
  user              User?      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("events") // Nome da tabela no banco de dados
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
